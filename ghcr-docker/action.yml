name: 'GitHub Container Registry & Docker'
description: 'This action will build and push a Docker image to GitHub Container Registry. The image will be labelled by OCI standards, and will be tagged with git tag semver and the latest tag.'

inputs:
  version:
    description: 'The version to tag with. Example: v1.2.3. Recommended using outputs.semver from imgg-devops/actions/git-meta'
    required: true
  
  repository:
    description: 'The repository to push to, in format {user}/{repo}. Example: imgg-devops/backend-next'
    required: true
  
  push:
    description: 'Whether to push the image to the registry. If false, the image will be built but not pushed.'
    required: false
    default: 'true'
  
  load:
    description: 'Whether to load the image into the local Docker daemon. If false, the image will be built but not loaded.'
    required: false
    default: 'false'
  
  build-args:
    description: 'Build arguments to pass to the Docker build command. One argument per line. Example (\n here is just to demonstrate the new line): ARG1=VALUE1 \n ARG2=VALUE2'
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: "Docker: Setup Buildx"
      uses: docker/setup-buildx-action@v3
    
    - name: "Docker: Login to GitHub Container Registry"
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: "Docker: Metadata"
      id: dockermeta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ inputs.repository }}
        tags: |
          type=semver,pattern=v{{version}}
          type=ref,event=branch
          type=ref,event=pr
        flavor: |
          latest=auto
    
    - name: "Docker: Build and Push Image"
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
        push: ${{ inputs.push }}
        load: ${{ inputs.load }}
        tags: ${{ steps.dockermeta.outputs.tags }}
        labels: ${{ steps.dockermeta.outputs.labels }}
        build-args: |
          VERSION=${{ inputs.version }}
          ${{ inputs.build-args }}

